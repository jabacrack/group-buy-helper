@page "/list/{id:int}/total"
@attribute [Authorize]
@using GroupBuyHelper.Services
@using GroupBuyHelper.Dtos
@using GroupBuyHelper.Data
@inject ProductService productService
@inject UserService userService

<h3>Всего заказано</h3>
<div class="d-flex flex-column"></div>
<table class="table flex-fill">
    <thead>
        <tr>
            <th scope="col">Название</th>
            <th scope="col">Описание</th>
            <th scope="col">Количество</th>
            <th scope="col">Цена</th>
            <th scope="col">Ваш выбор</th>
        </tr>
    </thead>
    <tbody>

        @foreach (var product in products)
        {
        <tr>
            <td>@product.Name</td>
            <td>@product.Description</td>
            <td>@product.Amount</td>
            <td>@product.Price</td>
            <td>@GetAmount(product.Id)</td>
        </tr>
        }
    </tbody>
</table>

@code {
    [Parameter]
    public int Id { get; set; }

    private ProductInfo[] products;
    private Dictionary<int, int> selectedProducts;

    protected override async Task OnInitializedAsync()
    {
        ApplicationUser currentUser = await userService.GetCurrentUser();
        selectedProducts = await productService.GetProductTotal(Id);
        products = await productService.GetProducts(Id);
    }

    private int? GetAmount(int productId)
    {
        if (selectedProducts.TryGetValue(productId, out var amount))
            return amount;

        return null;
    }
}
