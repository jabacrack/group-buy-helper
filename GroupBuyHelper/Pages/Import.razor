@page "/importlist"
@attribute [Authorize]

@using GroupBuyHelper.Services
@using GroupBuyHelper.Data
@using GroupBuyHelper.Dtos

@inject ProductService productsService
@inject UserService userService

<h3>Import</h3>
<form>
    
        <EditForm Model="importRequest" OnValidSubmit="AddList">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="d-flex flex-row flex-nowrap">
                <label for="importName">Name</label>
                <InputText id="importName" class="form-control form-control-sm" @bind-Value="importRequest.Name" />
                <label for="importColumnsSeparator">Columns separator</label>
                <InputText id="importColumnsSeparator" class="form-control form-control-sm" DisplayName="Columns separator" @bind-Value="importRequest.ColumnSeparator" />
                <label for="importNumberSeparator">Number separator</label>
                <InputText id="importNumberSeparator" class="form-control form-control-sm" DisplayName="Number separator" @bind-Value="importRequest.NumberSeparator" />
                <label for="importCurrencySymbol">Currency symbol</label>
                <InputText id="importCurrencySymbol" class="form-control form-control-sm" DisplayName="Currency symbol" @bind-Value="importRequest.CurrencySymbol" />
            </div>
            <InputTextArea @bind-Value="validationResult"/>
            <InputTextArea class="col" placeholder="Items" @bind-Value="importRequest.Items" />
            <button type="submit">Add List</button>

        </EditForm>
    
</form>





@code {
    
    private ImportRequest importRequest = new ImportRequest() {ColumnSeparator = "\t", NumberSeparator = ","};
    private string validationResult;

    private async Task AddList()
    {
        validationResult = string.Empty;
        ApplicationUser currentUser = await userService.GetCurrentUser();
        var validations = await productsService.AddList(currentUser, importRequest);
        if (validations.Any())
            validationResult = string.Join("\n", validations);
    }
}
